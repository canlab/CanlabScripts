% this function takes a confounds file generated by fmriprep, selects the
% desired regressors, computes squares and diffs of motion regs, and calls
% canlab spike detection on the raw data and adds spikes to the nuisance
% covariance matrix.

% in a Jan 2019 Wager lab mtg, we decided that its sensible to include the
% following in a 1st level model for task data: 24 motion regressors, CSF
% (esp. a degraded/conservative CSF mask), canlab spike detection on the
% raw data, spikes for initial volumes (5 sec), DVARS / RMSQ, framewise displacement.  We decided _not_ to
% include WM signal, as this often can contain BOLD signal of neuronal
% origin.  -- Yoni Ashar

function [Rfull, Rselected] = make_nuisance_covs_from_fmriprep_output(fmriprep_confounds_fname, raw_img_fname, TR)

confound_fname_csv = [fmriprep_confounds_fname(1:end-3) 'csv']; % replace tsv with csv
copyfile(fmriprep_confounds_fname, confound_fname_csv); % dumb hack to appease matlab -- readtable will only work with .csv, not .tsv
R = readtable(confound_fname_csv, 'TreatAsEmpty', 'n/a');

% replace NaNs in first row with Os
wh_replace = ismissing(R(1,:));
if any(wh_replace)
    R{1, wh_replace} = zeros(1, sum(wh_replace)); 
end

% compute squared, diffs, and squared diffs of motion
R.trans_x_sq = R.trans_x .^ 2; R.trans_y_sq = R.trans_y .^ 2; R.trans_z_sq = R.trans_z .^ 2;
R.rot_x_sq = R.rot_x .^ 2; R.rot_y_sq = R.rot_y .^ 2; R.rot_z_sq = R.rot_z .^ 2;

R.diffX = [0; diff(R.rot_x)]; R.diffY = [0; diff(R.rot_y)]; R.diffZ = [0; diff(R.rot_z)];
R.diffRotX = [0; diff(R.rot_x)]; R.diffRotY = [0; diff(R.rot_y)]; R.diffRotZ = [0; diff(R.rot_z)];

R.diffXsq = R.diffX .^ 2; R.diffy_sq = R.diffY .^ 2; R.diffz_sq = R.diffZ .^ 2;
R.diffRotXsq = R.diffRotX .^ 2; R.diffRoty_sq = R.diffRotY .^ 2; R.diffRotz_sq = R.diffRotZ .^ 2;

% add spikes for initial volumes
R.initial_vols = zeros(height(R),1);
nvols = round(5/TR);  % first 5 seconds
R.initial_vols(1:nvols) = ones(nvols,1);

% TODO: add in canlab spike detection (Mahalanobis distance)
[g, spikes, gtrim, nuisance_covs, snr] = scn_session_spike_id(raw_img_fname, 'doplot', 0);

nuisance_covs = nuisance_covs{1};
nuisance_covs(:,1) = []; %drop gtrim 
R = [R array2table(nuisance_covs)];

% select a reasonable subset of nuisance covs
regs = R.Properties.VariableNames;

% find motion cols
motion_cols = contains(regs,'rot') | contains(regs,'trans') | contains(regs,'diff'); 
if sum(motion_cols) ~= 24, error('Error finding motion regressors. Maybe fmriprep changed their names'); end

% find spike cols
spike_cols = contains(regs,'nuisance_covs'); 

Rfull = R;

% Include: 24 motion, CSF, dvars, framewise displacement
Rselected = R(:,motion_cols | spike_cols);
Rselected.dvars = R.dvars;
Rselected.framewise_displacement = R.framewise_displacement;
Rselected.csf = R.csf;


writetable(R, confound_fname_csv);
movefile(confound_fname_csv, fmriprep_confounds_fname); % revert to .tsv to appease BIDS spec


end